gather(level, coverage, C, O, F, G, S) %>%
left_join(tmp_abuns, by = 'otu') %>%
mutate(level = factor(level, levels = rev(c('C','O','F','G','S')))) %>%
group_by(trait, level) %>%
summarise(coverage = sum(abun[coverage]) / sum(abun))
ggplot(j, aes(x = level, y = coverage)) +
geom_bar(stat = 'identity') +
facet_wrap(~trait) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
labs(x = 'Maximum level of phylogenetic distance allowed when inferring trait data', y = 'Proportion of community with inferred trait data')
tmp <- traits_sparse %>%
gather(trait, val, -otu) %>%
filter(!is.na(val)) %>%
left_join(readRDS('data\\ggtax.RDS'), by = 'otu') %>%
filter(Species != 'unclassified')
tmp_abuns <- otus %>% group_by(otu) %>% summarise(abun = sum(abun))
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
left_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
) %>%
rename(C = Class, O = Order, F = Family, G = Genus, S = Species) %>%
gather(level, coverage, C, O, F, G, S) %>%
left_join(tmp_abuns, by = 'otu') %>%
mutate(level = factor(level, levels = rev(c('C','O','F','G','S')))) %>%
group_by(trait, level) %>%
summarise(coverage = sum(abun[coverage]) / sum(abun))
ggplot(j, aes(x = level, y = coverage)) +
geom_bar(stat = 'identity') +
facet_wrap(~trait) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
labs(x = 'Maximum level of phylogenetic distance allowed when inferring trait data', y = 'Proportion of community with inferred trait data')
head(traits)
tmp <- traits_sparse %>%
gather(trait, val, -otu) %>%
filter(!is.na(val)) %>%
left_join(readRDS('data\\ggtax.RDS'), by = 'otu') %>%
filter(Species != 'unclassified')
tmp_abuns <- otus %>% group_by(otu) %>% summarise(abun = sum(abun))
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
left_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
)
head(j)
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
left_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
) %>%
rename(C = Class, O = Order, F = Family, G = Genus, S = Species) %>%
gather(level, coverage, C, O, F, G, S) %>%
left_join(tmp_abuns, by = 'otu')
head(j)
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
left_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
) %>%
rename(C = Class, O = Order, F = Family, G = Genus, S = Species) %>%
gather(level, coverage, C, O, F, G, S) %>%
left_join(tmp_abuns, by = 'otu') %>%
mutate(level = factor(level, levels = rev(c('C','O','F','G','S'))))
head(j)
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
left_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
) %>%
rename(C = Class, O = Order, F = Family, G = Genus, S = Species) %>%
gather(level, coverage, C, O, F, G, S) %>%
left_join(tmp_abuns, by = 'otu') %>%
mutate(level = factor(level, levels = rev(c('C','O','F','G','S')))) %>%
group_by(trait, level) %>%
summarise(coverage = sum(abun[coverage]) / sum(abun))
head(j)
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
left_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
) %>%
rename(C = Class, O = Order, F = Family, G = Genus, S = Species) %>%
gather(level, coverage, C, O, F, G, S) %>%
left_join(tmp_abuns, by = 'otu') %>%
mutate(level = factor(level, levels = rev(c('C','O','F','G','S')))) %>%
group_by(trait, level)
head(j)
table(j$level)
sum(is.na(j$abun))
head(traits)
is.na(traits$Copies_16S)
sum(is.na(traits$Copies_16S))
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
inner_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
) %>%
rename(C = Class, O = Order, F = Family, G = Genus, S = Species) %>%
gather(level, coverage, C, O, F, G, S) %>%
left_join(tmp_abuns, by = 'otu') %>%
mutate(level = factor(level, levels = rev(c('C','O','F','G','S')))) %>%
group_by(trait, level) %>%
summarise(coverage = sum(abun[coverage]) / sum(abun))
ggplot(j, aes(x = level, y = coverage)) +
geom_bar(stat = 'identity') +
facet_wrap(~trait) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
labs(x = 'Maximum level of phylogenetic distance allowed when inferring trait data', y = 'Proportion of community with inferred trait data')
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
inner_join(tax, by = 'otu')
head(j)
dim(j)
dim(traits)
dim(tax)
j <- traits %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
left_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
) %>%
rename(C = Class, O = Order, F = Family, G = Genus, S = Species) %>%
gather(level, coverage, C, O, F, G, S)
dim(j)
head(tmp_abuns)
head(j)
table(tmp_abuns$otu %in% traits$otu)
table(traits$otu %in% tmp_abuns$abun)
table(traits$otu %in% tmp_abuns$otu)
j <- traits %>%
filter(otu %in% otus$otu)
dim(j)
tmp_abuns <- otus %>% group_by(otu) %>% summarise(abun = sum(abun))
j <- traits %>%
filter(otu %in% otus$otu) %>%
gather(trait, val, -otu) %>%
distinct(otu, trait) %>%
inner_join(tax, by = 'otu') %>%
mutate(
Species = paste(trait, Family, Genus, Species) %in% paste(tmp$trait, tmp$Family, tmp$Genus, tmp$Species),
Genus = paste(trait, Family, Genus) %in% paste(tmp$trait, tmp$Family, tmp$Genus),
Family = paste(trait, Family) %in% paste(tmp$trait, tmp$Family),
Order = paste(trait, Order) %in% paste(tmp$trait, tmp$Order),
Class = paste(trait, Class) %in% paste(tmp$trait, tmp$Class)
) %>%
rename(C = Class, O = Order, F = Family, G = Genus, S = Species) %>%
gather(level, coverage, C, O, F, G, S) %>%
inner_join(tmp_abuns, by = 'otu') %>%
mutate(level = factor(level, levels = rev(c('C','O','F','G','S')))) %>%
group_by(trait, level) %>%
summarise(coverage = sum(abun[coverage]) / sum(abun))
head(j)
ggplot(j, aes(x = level, y = coverage)) +
geom_bar(stat = 'identity') +
facet_wrap(~trait) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
labs(x = 'Maximum level of phylogenetic distance allowed when inferring trait data', y = 'Proportion of community with inferred trait data')
tmp <- otus %>%
mutate(t = t / 30) %>%
filter(t <= 36)
j1 <- tmp %>%
group_by(subject, t) %>%
summarise(rich = length(unique(otu)), group1 = 'Instantaneous richness', group2 = 'Within subjects') %>%
ungroup() %>%
select(t, subject, rich, group1, group2)
j2 <- tmp %>%
group_by(t) %>%
summarise(subject = 1, rich = length(unique(otu)), group1 = 'Instantaneous richness', group2 = 'Across subjects')
j3 <- tmp %>%
distinct(subject, t, otu) %>%
group_by(subject) %>%
arrange(t) %>%
mutate(rich = cummax(as.numeric(factor(otu, levels = unique(otu))))) %>%
group_by(subject, t) %>%
summarise(rich = max(rich), group1 = 'Cumulative richness', group2 = 'Within subjects') %>%
ungroup() %>%
select(subject, t, rich, group1, group2)
j4 <- tmp %>%
distinct(t, otu) %>%
arrange(t) %>%
mutate(rich = cummax(as.numeric(factor(otu, levels = unique(otu))))) %>%
group_by(t) %>%
summarise(subject = 1, rich = max(rich), group1 = 'Cumulative richness', group2 = 'Across subjects')
j <- rbind(mutate(rbind(j1, j3), scale = 'Individual infants'),
mutate(rbind(j2, j4), scale = 'All infants')) %>%
select(-group2)
j5 <- j %>%
mutate(t = round(t)) %>%
group_by(t, group1) %>%
summarise(
rich = mean(rich[scale == 'Individual infants']) / mean(rich[scale == 'All infants']),
scale = 'Individual infants / All infants',
subject = 1) %>%
ungroup()
j <- rbind(j, j5) %>%
mutate(scale = factor(scale, levels = c('Individual infants', 'All infants', 'Individual infants / All infants')))
j1 <- j %>%
mutate(
scale1 = ifelse(scale != 'Individual infants / All infants' & group1 == 'Instantaneous richness', 'Instantaneous richness', 'Individual infants / All infants'),
scale1 = ifelse(scale != 'Individual infants / All infants' & group1 == 'Cumulative richness', 'Cumulative richness', scale1),
scale1 = factor(scale1, levels = c('Instantaneous richness','Cumulative richness')))
tmp <- j1 %>%
filter(scale != 'Individual infants / All infants') %>%
mutate(t = round(t)) %>%
filter(t1 > 1 & t1 < 36)
head(j1)
tmp <- j1 %>%
filter(scale != 'Individual infants / All infants') %>%
mutate(t = round(t)) %>%
filter(t > 1 & t < 36)
ggplot(tmp, aes(x = t, y = rich, color = scale)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", data = filter(tmp, !(scale == 'All infants' & scale1 == 'Cumulative richness'))) +
stat_smooth(aes(group = interaction(scale, group1)), se = FALSE) +
scale_color_discrete(name = '') +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
legend.position = 'bottom') +
facet_wrap(~scale1, scales = 'free_y') +
labs(x = 'Months after birth', y = 'OTU richness')
j <- filter(j_delta, delta < 100)
j %>%
group_by(group) %>%
summarise(Pearson = cor(delta, dist))
cor(j$delta, j$dist)
ggplot(j, aes(x = delta, y = dist)) +
geom_jitter(alpha = 0.1) +
stat_smooth() +
facet_wrap(~group) +
th +
labs(x = 'Dissimilarity', y = 'Days between samples')
j <- filter(j_delta, delta > 100)
dim(j)
head(j)
dim(j_delta)
2296 - 60
2236/2
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta) %>%
ggplot() +
geom_segment(aes(x = t_min, xend = t_max, y = t_length, yend = t_length, color = delivery)) +
geom_point(aes(x = t, y = t_length)) +
th
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min, xend = t_max, yend = t_length)) +
geom_point(aes(x = t)) +
th
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min, xend = t_max, yend = t_length)) +
geom_point(aes(x = t)) +
scale_color_manual(values = c('black','red')) +
th
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min, xend = t_max, yend = t_length)) +
geom_point(aes(x = t)) +
scale_color_manual(values = c('black','green')) +
th
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min, xend = t_max, yend = t_length)) +
geom_point(aes(x = t)) +
scale_color_manual(values = c('black','green')) +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','green')) +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','green')) +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','green')) +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','tan')) +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','green')) +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
mutate(delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery')) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','green'), name = 'Delivery mode') +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
mutate(delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery')) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','green'), name = '') +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
mutate(delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery')) %>%
ggplot(aes(y = factor(t_length), color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = factor(t_length))) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','green'), name = '') +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
mutate(
delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery'),
t_length = factor(round(t_length))) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','green'), name = '') +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
mutate(
delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery'),
t_length = factor(round(t_length))) %>%
ggplot(aes(y = t_length, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = t_length)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','purple'), name = '') +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
mutate(
delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery'),
t_length = factor(round(t_length)))
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
arrange(desc(t_length)) %>%
mutate(
delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery')),
Subject = factor(subject, levels = unique(subject))
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
arrange(desc(t_length))
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
arrange(desc(t_length)) %>%
mutate(
delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery')),
Subject = factor(subject, levels = unique(subject))
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
arrange(desc(t_length)) %>%
mutate(
delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery'),
Subject = factor(subject, levels = unique(subject))
) %>%
ggplot(aes(y = Subject, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = Subject)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','purple'), name = '') +
th +
labs(x = 'Months after birth', y = 'Days between first and last sample')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
arrange(desc(t_length)) %>%
mutate(
delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery'),
Subject = as.numeric(factor(subject, levels = unique(subject)))
) %>%
ggplot(aes(y = Subject, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = Subject)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','purple'), name = '') +
th +
labs(x = 'Months after birth', y = 'Subject')
otus_cs %>%
distinct(subject, t, delivery) %>%
left_join(meta, by = c("subject", "delivery")) %>%
arrange(desc(t_length)) %>%
mutate(
delivery = ifelse(delivery == 'caesaren', 'Caesaren delivery','Vaginal delivery'),
Subject = as.numeric(factor(subject, levels = unique(subject)))
) %>%
ggplot(aes(y = Subject, color = delivery)) +
geom_segment(aes(x = t_min/30, xend = t_max/30, yend = Subject)) +
geom_point(aes(x = t/30)) +
scale_color_manual(values = c('black','purple'), name = '') +
th +
labs(x = 'Months after birth', y = 'Subject')
